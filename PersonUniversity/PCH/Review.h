//
//  Review.h
//  PersonUniversity
//
//  Created by YYSky-Star on 2017/4/27.
//  Copyright © 2017年 YYStar. All rights reserved.
//


/**
 *  //MARK: 代理 block 通知 KVO 的区别
 *   代理：把某一个对象需要做的事情委托给别的对象去做，那么别的对象就是这个对象的代理，代替它打理一些事情
 *        1.一对一
 *        2.控制器之间的传值
 *        优点： 1.语法严格，所有监听事件必须在代理中，清晰一目了然
                2.协议在congtroller作用范围内定义
                3.可以追踪应用中的控制流程
                4.一个控制器中可以定义多个协议，每个协议有不同的delegate
                5.可以接受返回值，反馈给congtroller，意思也就是可以监听事件过程
 *        缺点： 1.需要定义很多代码，协议啊，代理啊，代理的实现啊
                2.释放时虚小心的设置为nil，否则调用时容易出现crash 
                3.
 
 *   block：一个匿名函数
 *          1.一对一，跟代理类似。
 *          2.注意循环引用
             
            代码集中
            个人认为当多个回掉时用代理方便些
 
 *   通知： 一对多
 *      优点：1.不需多少代码，实现简单
             2.可以一对多
             3.可以传递context对象
 
 *      缺点：1.发出通知后，congtrolelr不能从观察者获取任何反馈
             2.编译器不会检查通知能否被观察者正确处理
             3.释放注册对象时，需在通知中心取消注册
             4.调用时应用的工作以及控制过程难追踪
             
 *   KVO：一个对象观察另一个对象的属性的值发生变化，能发现值的变化
            优点：1.能够提供简单的方法实现两个对象间的同步，例如model与view间
                 2.能够对非我们创建的对象，即内部对象的状态改变作出响应，而且不需要改变内部对象（SKD对象）的实现；
                 3.能够提供观察的属性的最新值以及先前值
                 4.用key paths来观察属性，因此也可以观察嵌套对象；
                 5.完成了对观察对象的抽象，因为不需要额外的代码来允许观察值能够被观察
            缺点：1.我们观察的属性必须使用strings来定义。因此在编译器不会出现警告以及检查；
                 2.对属性重构将导致我们的观察代码不再可用；
                 4.当释放观察者时不需要移除观察者。
 *
 **/
